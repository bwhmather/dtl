#pragma once

#include "dtl-location.h"

enum dtl_token_type {
    DTL_TOKEN_END_OF_FILE,
    DTL_TOKEN_ERROR,

    /* LITERALS. */
    DTL_TOKEN_INT,
    DTL_TOKEN_FLOAT,
    DTL_TOKEN_STRING,
    DTL_TOKEN_BYTE_STRING,

    /* KEYWORDS. */
    DTL_TOKEN_AS,
    DTL_TOKEN_BY,
    DTL_TOKEN_CONSECUTIVE,
    DTL_TOKEN_DISTINCT,
    DTL_TOKEN_EXPORT,
    DTL_TOKEN_FROM,
    DTL_TOKEN_GROUP,
    DTL_TOKEN_IMPORT,
    DTL_TOKEN_JOIN,
    DTL_TOKEN_ON,
    DTL_TOKEN_SELECT,
    DTL_TOKEN_TO,
    DTL_TOKEN_UPDATE,
    DTL_TOKEN_USING,
    DTL_TOKEN_WHERE,
    DTL_TOKEN_WITH,

    /* SYMBOLS */
    DTL_TOKEN_SEMICOLON,
    DTL_TOKEN_COMMA,
    DTL_TOKEN_DOT,
    DTL_TOKEN_OPEN_PARENTHESIS,
    DTL_TOKEN_CLOSE_PARENTHESIS,
    DTL_TOKEN_OPEN_BRACE,
    DTL_TOKEN_CLOSE_BRACE,
    DTL_TOKEN_OPEN_BRACKET,
    DTL_TOKEN_CLOSE_BRACKET,
    DTL_TOKEN_AT,
    DTL_TOKEN_POUND,
    DTL_TOKEN_TILDE,
    DTL_TOKEN_QUESTION,
    DTL_TOKEN_COLON,
    DTL_TOKEN_DOLLAR,

    /* OPERATORS */
    DTL_TOKEN_EQUAL,
    DTL_TOKEN_NOT,
    DTL_TOKEN_NOT_EQUAL,
    DTL_TOKEN_LESS_THAN,
    DTL_TOKEN_LESS_THAN_OR_EQUAL,
    DTL_TOKEN_GREATER_THAN,
    DTL_TOKEN_GREATER_THAN_OR_EQUAL,
    DTL_TOKEN_MINUS,
    DTL_TOKEN_PLUS,
    DTL_TOKEN_STAR,
    DTL_TOKEN_SLASH,
    DTL_TOKEN_CARET,
    DTL_TOKEN_PERCENT,

    /* IDENTIFIERS */
    DTL_TOKEN_TYPE,
    DTL_TOKEN_NAME,
    DTL_TOKEN_QUOTED_NAME,

    /* BLANKS */
    DTL_TOKEN_LINE_COMMENT,
    DTL_TOKEN_BLOCK_COMMENT,
    DTL_TOKEN_WHITESPACE
};

struct dtl_token {
    enum dtl_token_type type;
    struct dtl_location start;
    struct dtl_location end;
};

const char *
dtl_token_type_to_string(enum dtl_token_type type);
